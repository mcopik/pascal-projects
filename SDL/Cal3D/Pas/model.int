//----------------------------------------------------------------------------//
// Copyright (C) 2001 Paul TOTH                        Delphi translation     //
// Copyright (C) 2001 Bruno 'Beosil' Heidelberger      original C version     //
//----------------------------------------------------------------------------//
// This program is free software; you can redistribute it and/or modify it    //
// under the terms of the GNU General Public License as published by the Free //
// Software Foundation; either version 2 of the License, or (at your option)  //
// any later version.                                                         //
//----------------------------------------------------------------------------//
// model.h

CalModel = class
protected
  m_pCoreModel : CalCoreModel;
  m_pSkeleton : CalSkeleton;
  m_pMixer : CalAbstractMixer;
  m_pMorphTargetMixer: CalMorphTargetMixer;
  m_pPhysique : CalPhysique;
  m_pSpringSystem : CalSpringSystem;
  m_pRenderer : CalRenderer;
  m_userData : CalUserData;
  m_vectorMesh : CalMeshes;
  m_boundingBox : CalBoundingBox;
  
public

  constructor Create( pCoreModel : CalCoreModel );
  destructor Destroy; override;

  function attachMesh( coreMeshId : integer ) : boolean;
  function detachMesh( coreMeshId : integer ) : boolean;

  property getCoreModel : CalCoreModel read m_pCoreModel;
  function getMesh( coreMeshId : integer ) : CalMesh;
  function getMixer : CalMixer;
  procedure setAbstractMixer( pMixer : CalAbstractMixer );
  property AbstractMixer : CalAbstractMixer read m_pMixer write setAbstractMixer;
  property getMorphTargetMixer : CalMorphTargetMixer read m_pMorphTargetMixer;
  property getPhysique : CalPhysique read m_pPhysique;
  property getRenderer : CalRenderer read m_pRenderer;
  property getSkeleton : CalSkeleton read m_pSkeleton;
  property getSpringSystem : CalSpringSystem read m_pSpringSystem;
  function getBoundingBox( precision : boolean = false ) : CalBoundingBox;
  property getVectorMesh : CalMeshes read m_vectorMesh;
  property UserData : CalUserData read m_UserData write m_userData;
  
  procedure setLodLevel( lodLevel : float );
  procedure setMaterialSet( setId : integer );
  procedure update( deltaTime : float );

  procedure disableInternalData;
end;

